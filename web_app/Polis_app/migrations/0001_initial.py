# Generated by Django 4.2.6 on 2023-11-25 19:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('Doctor_identificator', models.AutoField(primary_key=True, serialize=False, verbose_name='Идентификатор доктора')),
                ('Doctor_FIO', models.CharField(max_length=50, verbose_name='ФИО доктора')),
                ('Doctor_specialization', models.CharField(max_length=50, verbose_name='Специализация доктора')),
                ('Doctor_experience', models.IntegerField(verbose_name='Опыт работы врача')),
                ('Doctor_phone_number', models.CharField(max_length=50, verbose_name='Номер телефона врача')),
            ],
            options={
                'verbose_name': 'Информация о врачах',
                'verbose_name_plural': 'Информация о врачах',
                'db_table': 'Doctor',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('Patient_indentificator', models.AutoField(primary_key=True, serialize=False, verbose_name='Идентификатор пациента')),
                ('Patient_FIO', models.CharField(max_length=50, verbose_name='ФИО пациента')),
                ('Patient_date_of_birth', models.DateTimeField(verbose_name='Дата рождения пациента')),
                ('Patient_gender', models.CharField(max_length=50, verbose_name='Пол пациента')),
                ('Patient_address', models.CharField(max_length=50, verbose_name='Адрес пациента')),
                ('Patient_phone_number', models.CharField(max_length=50, verbose_name='Номер телефона пациента')),
            ],
            options={
                'verbose_name': 'Информация о пациентах',
                'verbose_name_plural': 'Информация о пациентах',
                'db_table': 'Patient',
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('Treatment_identificator', models.AutoField(primary_key=True, serialize=False, verbose_name='Идентификатор лечения')),
                ('Treatment_date_start', models.DateTimeField(verbose_name='Дата начала лечения')),
                ('Treatment_date_end', models.DateTimeField(verbose_name='Дата окончания лечения')),
                ('Diagnosis', models.CharField(max_length=100, verbose_name='Диагноз')),
                ('Prescribed_treatment', models.CharField(max_length=100, verbose_name='Назначенные процедуры и лекарства')),
                ('Doctor_identificator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Polis_app.doctor', verbose_name='Идентификатор врача')),
                ('Patient_identificator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Polis_app.patient', verbose_name='Идентификатор пациента')),
            ],
            options={
                'verbose_name': 'Информация о лечении',
                'verbose_name_plural': 'Информация о лечении',
                'db_table': 'Treatment',
            },
        ),
        migrations.CreateModel(
            name='Polis',
            fields=[
                ('Polis_identificator', models.AutoField(primary_key=True, serialize=False, verbose_name='Идентификатор полиса')),
                ('Polis_date_start', models.DateTimeField(verbose_name='Дата начала действия полиса')),
                ('Polis_date_end', models.DateTimeField(verbose_name='Дата окончания действия полиса')),
                ('Polis_status', models.CharField(max_length=50, verbose_name='Статус полиса')),
                ('Patient_identificator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Polis_app.patient', verbose_name='Идентификатор пациента')),
            ],
            options={
                'verbose_name': 'Информация о полисах',
                'verbose_name_plural': 'Информация о полисах',
                'db_table': 'Polis',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('Payment_identificator', models.AutoField(primary_key=True, serialize=False, verbose_name='Идентификатор платежа')),
                ('Payment_date', models.DateTimeField(verbose_name='Дата платежа')),
                ('Payment_sum', models.IntegerField(verbose_name='Сумма платежа')),
                ('Payment_status', models.CharField(max_length=50, verbose_name='Статус платежа')),
                ('Patient_identificator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Polis_app.patient', verbose_name='Идентификатор пациента')),
            ],
            options={
                'verbose_name': 'Информация о платежах',
                'verbose_name_plural': 'Информация о платежах',
                'db_table': 'Payment',
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('Assignment_identificator', models.AutoField(primary_key=True, serialize=False, verbose_name='Идентификатор назначения')),
                ('Assignment_date', models.DateTimeField(verbose_name='Дата назначения')),
                ('Assignment_description', models.CharField(max_length=100, verbose_name='Описание назначения')),
                ('Assignment_status', models.CharField(max_length=50, verbose_name='Статус назначения')),
                ('Doctor_identificator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Polis_app.doctor', verbose_name='Идентификатор врача')),
                ('Patient_identificator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Polis_app.patient', verbose_name='Идентификатор пациента')),
            ],
            options={
                'verbose_name': 'Информация о назначениях',
                'verbose_name_plural': 'Информация о назначениях',
                'db_table': 'Assignment',
            },
        ),
    ]
